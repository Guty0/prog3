class Operacio {   
public static double[][] suma(double[][] matA, double[][] matB) {
    int filas = matA.length;
    int cols = matA[0].length;
    double[][] matR = new double[filas][cols];

    for (int i = 0; i < filas; i++) {
      for (int j = 0; j < cols; j++) {
        matR[i][j] = matA[i][j] + matB[i][j];
      }
    }

    return matR;
  }

  public static double[][] producto(double[][] matA, double[][] matB) {
    int filasA = matA.length;
    int colsA = matA[0].length;
    int filasB = matB.length;
    int colsB = matB[0].length;

    if (colsA != filasB) {
      System.out.println("No se pueden multiplicar las matrices. El número de columnas de A debe ser igual al número de filas de B.");
      return null;
    }

    double[][] matR = new double[filasA][colsB];

    for (int i = 0; i < filasA; i++) {
      for (int j = 0; j < colsB; j++) {
        for (int k = 0; k < colsA; k++) {
          matR[i][j] += matA[i][k] * matB[k][j];
        }
      }
    }
    return matR;
  }
public static double[][] escalar(double[][] matA, double escalar) {
    int filasA = matA.length;
    int colsA = matA[0].length;

    double[][] matR = new double[filasA][colsA];

    for (int i = 0; i < filasA; i++) {
      for (int j = 0; j < colsA; j++) {
        matR[i][j] = matA[i][j] * escalar;
      }
    }
    return matR;
  }
public static double[][] traspuesta(double[][] matA) {
    int filasA = matA.length;
    int colsA = matA[0].length;

    double[][] matR = new double[colsA][filasA];

    for (int i = 0; i < filasA; i++) {
      for (int j = 0; j < colsA; j++) {
        matR[j][i] = matA[i][j];
      }
    }

    return matR;
  }
  }
  
